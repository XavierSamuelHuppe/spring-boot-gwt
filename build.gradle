buildscript {
    ext {
        springBootVersion = '1.5.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'advise'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    // We need to use Jetty as Spring Boot Tomcat conflicts with GWT
    compile.exclude module: "spring-boot-starter-tomcat"
}

ext {
    gwtVersion = '2.4.0'
}

dependencies {

    // Has to come before gwt-dev as gwt-dev includes older servlet api classes that is
    // incompatible with Spring Boot
    compile 'javax.servlet:javax.servlet-api:3.1.0'

    // Needed for GWT compile and at runtime for RequestBuilder
    // Specify two artifacts as workaround for GRADLE-1934
    compile('javax.validation:validation-api:1.1.0.Final') {
        artifact {
            name = 'validation-api'
            type = 'jar'
        }
        artifact {
            name = 'validation-api'
            type = 'jar'
            classifier = 'sources'
        }
    }

    compile "com.google.gwt:gwt-user:${gwtVersion}"
    compile "com.google.gwt:gwt-servlet:${gwtVersion}"
    compile "com.google.gwt:gwt-dev:${gwtVersion}"

    compile 'com.google.gwt.inject:gin:1.5.0'
    compile 'com.google.inject:guice:3.0-rc2'
    compile 'com.google.inject.extensions:guice-assistedinject:3.0-rc2'

    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-jetty')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

task compileGwt(dependsOn: classes, type: JavaExec) {
    ext.buildDir = "${buildDir}/gwt"
    ext.extraDir = "${buildDir}/extra"

    inputs.source sourceSets.main.java.srcDirs
    inputs.dir sourceSets.main.output.resourcesDir
    outputs.dir buildDir

    // Workaround for incremental build (GRADLE-1483)
    outputs.upToDateSpec = new org.gradle.api.specs.AndSpec()

    doFirst {
        file(buildDir).mkdirs()
        //classpath.each { println it.name}
    }

    main = 'com.google.gwt.dev.Compiler'

    classpath {
        [
            sourceSets.main.java.srcDirs,           // Java source
            sourceSets.main.output.resourcesDir,    // Generated resources
            sourceSets.main.output.classesDir,      // Generated classes
            sourceSets.main.compileClasspath,       // Deps
        ]
    }

    args = [
            'ca.ingeno.advise.advise', // Your GWT module
            '-war', buildDir,
            '-logLevel', 'INFO',
            '-localWorkers', '2',
            '-compileReport',
            '-extra', extraDir,
            // '-draftCompile' // Speeds up compile with 25%
        ]

    maxHeapSize = '256M'
}

task processGwtResources(dependsOn: compileGwt, type: Copy) {
    from "${buildDir}/gwt/advise"
    into "${buildDir}/main/static/advise"
}

jar.dependsOn processGwtResources
bootRun.dependsOn processGwtResources